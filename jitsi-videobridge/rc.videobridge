#!/bin/sh
# Start/stop/restart the jitsi video bridge server:

set -a

# Include videobridge defaults if available
if [ -f /etc/jitsi/videobridge/config ]; then
    . /etc/jitsi/videobridge/config
fi

NAME="jitsi-videobridge"
DAEMON=/opt/jitsi-videobridge/jvb.sh
DAEMON_OPTS=" --host=$JVB_HOST --domain=$JVB_HOSTNAME --port=$JVB_PORT --secret=$JVB_SECRET $JVB_OPTS"

# A tmpfs backed directory just for the JVB process. This is introduced
# to hold packet arrival times, but it may be otherwise useful in the future.
TMPPATH=/var/run/jitsi-videobridge
PIDFILE=/var/run/jitsi-videobridge.pid
LOGFILE=/var/log/jitsi/jvb.log
DESC=jitsi-videobridge

if [ ! -d "$TMPPATH" ]; then
    mkdir "$TMPPATH"
fi

videobridge_start() {
    ulimit -n 8192
    export JAVA_HOME=/usr/lib64/java
    export PATH=$PATH:/usr/lib64/java/bin
    LD_LIBRARY_PATH=/opt/jitsi-videobridge/ JAVA_SYS_PROPS="$JAVA_SYS_PROPS" nohup $DAEMON $DAEMON_OPTS < /dev/null >> $LOGFILE 2>&1 &
    echo $! > $PIDFILE
}

videobridge_stop() {
    if [ -f $PIDFILE ]; then
        PID=$(cat $PIDFILE)
    fi
    echo -n "Stopping $DESC: "
    if [ $PID ]; then
        kill $PID || true
        rm $PIDFILE || true
        echo "$NAME stopped."
    else
        echo "$NAME doesn't seem to be running."
    fi
}

videobridge_restart() {
  videobridge_stop
  videobridge_start
}

case "$1" in
'start')
  videobridge_start
  ;;
'stop')
  videobridge_stop
  ;;
'restart')
  videobridge_restart
  ;;
*)
  echo "usage $0 start|stop|restart"
esac

